Depth = col_double(),
Value = col_character(),
Size = col_character(),
Params = col_character(),
Footprint = col_character(),
Tag = col_character(),
JobId = col_character(),
GFlop = col_character(),
SubmitOrder = col_character(),
X = col_character(),
Y = col_character(),
Iteration = col_character(),
Subiteration = col_character()
));
csv
class(csv)
fred_tibble = as.tibble(fred)
library(dplyr)
fred_tibble = as.tibble(fred)
package(tibble)
library(tibble)
fred_tibble = as.tibble(fred)
fred_tibble
identical(csv, fred_tibble)
identical(fred, fred_tibble)
identical(fred, fred)
all.equal(csv, fred_tibble)
csv
fred_tibble
fred <- fread('/home/alles/tmp/tiny-csvs/paje.state.csv', sep=',', header=T, fill=T, data.table=F)
fred <- fread('/home/alles/tmp/tiny-csvs/paje.state.csv', sep=',', header=T, fill=T, data.table=F, colClasses=cols(
Nature = col_character(),
ResourceId = col_character(),
Type = col_character(),
Start = col_double(),
End = col_double(),
Duration = col_double(),
Depth = col_double(),
Value = col_character(),
Size = col_character(),
Params = col_character(),
Footprint = col_character(),
Tag = col_character(),
JobId = col_character(),
GFlop = col_character(),
SubmitOrder = col_character(),
X = col_character(),
Y = col_character(),
Iteration = col_character(),
Subiteration = col_character()
));
fred <- fread('/home/alles/tmp/tiny-csvs/paje.state.csv', sep=',', header=T, fill=T, data.table=F, colClasses=cols(
Nature = 'character',
ResourceId = 'character',
Type = col_character(),
Start = col_double(),
End = col_double(),
Duration = col_double(),
Depth = col_double(),
Value = col_character(),
Size = col_character(),
Params = col_character(),
Footprint = col_character(),
Tag = col_character(),
JobId = col_character(),
GFlop = col_character(),
SubmitOrder = col_character(),
X = col_character(),
Y = col_character(),
Iteration = col_character(),
Subiteration = col_character()
));
fred <- fread('/home/alles/tmp/tiny-csvs/paje.state.csv', sep=',', header=T, fill=T, data.table=F, colClasses=c(
Nature = 'character',
ResourceId = 'character',
Type = col_character(),
Start = col_double(),
End = col_double(),
Duration = col_double(),
Depth = col_double(),
Value = col_character(),
Size = col_character(),
Params = col_character(),
Footprint = col_character(),
Tag = col_character(),
JobId = col_character(),
GFlop = col_character(),
SubmitOrder = col_character(),
X = col_character(),
Y = col_character(),
Iteration = col_character(),
Subiteration = col_character()
));
fred <- fread('/home/alles/tmp/tiny-csvs/paje.state.csv', sep=',', header=T, fill=T, data.table=F, colClasses=c(
'character',
'character',
'character',
'double',
'double',
'double',
'double',
'character',
'character',
'character',
'character',
'character',
'character',
'character',
'character',
'character',
'character',
'character',
'character'
));
fred_tibble <- as.tibble(fred)
identical(csv, fred_tibble)
fred_tibble
csv
fred <- fread('/home/alles/tmp/tiny-csvs/paje.state.csv', sep=',', header=T, fill=T, data.table=F);
fred <- fread('/home/alles/tmp/tiny-csvs/paje.state.csv', sep=',', header=T, fill=T, data.table=F);
fred_tibble <- as.tibble(fred);
fred_tibble <- fred_tibble %>% mutate(
Nature = as.character(Nature),
ResourceId = as.character(ResourceId),
Type = as.character(Type),
Start = as.double(Start),
End = as.double(End),
Duration = as.double(Duration),
Depth = as.double(Depth),
Value = as.character(Value),
Size = as.character(Size),
Params = as.character(Params),
Footprint = as.character(Footprint),
Tag = as.character(Tag),
JobId = as.character(JobId),
GFlop = as.character(GFlop),
SubmitOrder = as.character(SubmitOrder),
X = as.character(X),
Y = as.character(Y),
Iteration = as.character(Iteration),
Subiteration = as.character(Subiteration));
fred_tibble
identical(csv, fred_tibble)
identical(csv, fred_tibble)
fred_tibble
fred_tibble
csv
setwd("~/workspace/hpc-containers/wscad/ping-pong/results")
library(tidyverse)
docker <- read_csv('./results-docker.csv')
singularity <- read_csv('./results-singularity.csv')
native <- read_csv('./results-native.csv')
View(singularity)
docker <- read_csv('./results-docker.csv')
singularity <- read_csv('./results-singularity.csv')
native <- read_csv('./results-native.csv')
results <- bind_rows(docker, singularity, native);
docker <- read_csv('./results-docker.csv') %>% mutate(environment = 'docker')
singularity <- read_csv('./results-singularity.csv') %>% mutate(environment = 'singularity')
native <- read_csv('./results-native.csv') %>% mutate(environment = 'native')
results <- bind_rows(docker, singularity, native);
results <- results %>% group_by(environment, size) %>%
summarize(
samples = n(),
average = mean(time),
stdDeviation = sd(time),
stdError = 3*stdDeviation/sqrt(samples)
);
View(results)
default_theme <- function() {
ret <- list();
ret[[length(ret)+1]] <- theme (
plot.margin = unit(c(0,0,0,0), "cm"),
legend.spacing = unit(1, "mm"),
legend.position = "top",
legend.justification = "left",
legend.box.spacing = unit(0, "pt"),
legend.box.margin = margin(0,0,0,0),
legend.title = element_blank());
return(ret);
}
g <- ggplot(
aes( x=size, y=average, ymin=average-stdErr, ymax=average+stdErr, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=14) +
ylim(0,NA) +
scale_x_continuous(trans="log2")
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdErr, ymax=average+stdErr, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=14) +
ylim(0,NA) +
scale_x_continuous(trans="log2")
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=14) +
ylim(0,NA) +
scale_x_continuous(trans="log2")
plot(g)
View(results)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=14) +
ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)')
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=14) +
ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
default_theme()
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=14) +
ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey()
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=14) +
ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
#scale_x_continuous(breaks=c(1, 4, 8, 16), trans='sqrt') +
ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_x_continuous(breaks=seq(0, 30, 5)) +
ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_x_continuous(breaks=seq(0, 30, 5), trans = 'log2') +
ylim(0,NA) +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_y_continuous(breaks=seq(0, 30, 5)) +
ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_y_continuous(breaks=seq(0, 30, 5)) +
#ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_y_continuous(breaks=seq(0, 30, 5), trans='log2') +
#ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_y_continuous(trans='log2') +
#ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
View(native)
View(native)
source('~/workspace/hpc-containers/wscad/ping-pong/results/plot-results-pingpong.R')
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_y_continuous(trans='log2') +
ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
#
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_y_continuous(trans='log2') +
#ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_y_continuous(limits = c(0, NA), trans='log2') +
#ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_y_continuous(limits = c(0, 32), trans='log2') +
#ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_y_continuous(limits = c(0.1, 32), trans='log2') +
#ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_y_continuous(trans='log2') +
expand_limits(y = 0) +
#ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_y_continuous(trans='log2') +
expand_limits(y = -0.01) +
#ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_y_continuous(trans='log2') +
expand_limits(y = 0.000000001) +
#ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,
aes( x=size, y=average, ymin=average-stdError, ymax=average+stdError, color=environment, group=environment)) +
aes(ymin = 0) +
geom_line(alpha=0.3) +
geom_point(size=3) +
geom_errorbar(width=0.3) +
theme_bw(base_size=12) +
scale_y_continuous(trans='log2') +
#ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,aes(x=size, y=average, ymin = 0)) +
geom_line(aes(col = environment), alpha = 0.2) +
geom_point(aes(col = environment), size = 3) +
geom_errorbar(aes(ymin=average-stdError, ymax=average+stdError, color=environment, group=environment), width = 0.3) +
theme_bw(base_size=12) +
scale_y_continuous(trans='log2') +
#ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
g <- ggplot(results,aes(x=size, y=average)) +
geom_line(aes(col = environment), alpha = 0.2) +
geom_point(aes(col = environment), size = 3) +
geom_errorbar(aes(ymin=average-stdError, ymax=average+stdError, color=environment, group=environment), width = 0.3) +
theme_bw(base_size=12) +
scale_y_continuous(trans='log2') +
#ylim(0,NA) +
scale_x_continuous(trans="log2") +
ylab('Average latency (ms)') +
xlab('Message size (bytes)') +
scale_color_grey() +
default_theme()
plot(g)
source('~/workspace/hpc-containers/wscad/ping-pong/results/plot-results-pingpong.R')
